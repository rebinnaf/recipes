{"version":3,"sources":["pages/NotFound.tsx","components/Header.tsx","components/ui/Card.tsx","utils/queries.ts","components/RecipePreview.tsx","pages/Recipes.tsx","components/ui/ArrayInputControl.tsx","components/ui/InputControlGroup.tsx","components/ui/CollapseCard.tsx","pages/RecipeCreate.tsx","assets/images/DefaultImage.jpg","components/Recipe/Ingredients.tsx","components/Recipe/PreparationSteps.tsx","components/Recipe/Recipe.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NotFound","className","Header","history","useHistory","useState","searchName","setSearchName","align","py","bg","justify","motion","div","animate","scale","rotate","transition","duration","loop","Infinity","times","repeatDelay","as","GiHotMeal","mx","mt","colorScheme","variant","width","to","placeholder","size","onChange","e","target","value","icon","Search","onClick","push","card","image","title","subtitle","category","description","buttonContent","targetPath","onDelete","hovered","setHovered","borderWidth","borderRadius","overflow","onMouseEnter","onMouseLeave","my","minH","minW","name","src","marginBottom","d","alignItems","px","color","fontWeight","letterSpacing","fontSize","textTransform","ml","p","lineHeight","isTruncated","Delete","Edit","GET_RECIPES_QUERY","gql","GET_RECIPE_QUERY","CREATE_RECIPE_MUTATION","EDIT_RECIPE_MUTATION","DELETE_RECIPE_MUTATION","SEARCH_RECIPE_QUERY","RecipePreview","_id","cookingTime","createdAt","useMutation","deleteRecipe","a","variables","id","moment","fromNow","Recipes","searchMode","params","useParams","query","recipeName","useQuery","fetchPolicy","data","error","loading","spacing","recipes","map","recipe","index","ObjectInputRow","fields","flex","Object","entries","fieldName","InputHeading","props","label","inputRows","defaultRow","isString","length","keys","fieldTitle","Add","ArrayInputcontrol","useField","touched","remove","rowData","textAlign","InputControlGroup","left","right","children","m","CollapseCard","rest","useDisclosure","isOpen","onToggle","w","in","animateOpacity","validationSchema","Yup","required","preparationSteps","min","of","ingredients","shape","product","quantity","unit","initialIngredient","RecipeCreate","editMode","createRecipe","editRecipe","initialValues","recipeId","__typename","forEach","ingredient","values","actions","console","log","setSubmitting","editedRecipe","assign","toISOString","onSubmit","type","Ingredients","PreparationSteps","mb","preparationStep","Recipe","numberOfServings","height","h","objectFit","DefaultImage","alt","Time","mr","pb","App","path","from","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getAuthorizationHeader","fetch","method","headers","body","JSON","stringify","key","res","ok","json","accessToken","access_token","withToken","setContext","token","authMiddleware","ApolloLink","operation","forward","getContext","Authorization","httpLink","HttpLink","uri","cache","InMemoryCache","client","ApolloClient","link","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.830f735b.chunk.js","sourcesContent":["import React from 'react'\n\nconst NotFound: React.FC = () => (\n  <div className=\"px4 flex\">\n    <h2 className=\"h2\">404: not found!</h2>\n  </div>\n)\n\nexport default NotFound\n","import { Heading, Flex, Button, Box, Input, IconButton } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { GiHotMeal } from 'react-icons/gi'\nimport { Icon, SearchIcon } from '@chakra-ui/icons'\nimport { motion } from 'framer-motion'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router'\n\nexport default function Header() {\n  const history = useHistory()\n  const [searchName, setSearchName] = useState('')\n  return (\n    <Box align=\"center\">\n      <Heading py=\"2\" bg=\"purple.200\" align=\"center\">\n        <Flex align=\"center\" justify=\"space-around\">\n          <Flex align=\"center\">\n            <motion.div\n              animate={{ scale: [1, 1.2, 1.2, 1.2, 1], rotate: [0, 0, 30, -30, 0] }}\n              transition={{ duration: 2, loop: Infinity, times: [0, 0.2, 0.5, 0.8, 1], repeatDelay: 2 }}\n            >\n              <Icon as={GiHotMeal} mx=\"5\" mt=\"-3\" />\n            </motion.div>\n            Let&apos;s Cook!\n          </Flex>\n        </Flex>\n      </Heading>\n      <Box bg=\"purple.50\">\n        <Button colorScheme=\"purple\" variant=\"outline\" width={['50%', '50%', '50%', '10%']}>\n          <Link to=\"/\">All Recipes</Link>\n        </Button>\n        <Button colorScheme=\"purple\" variant=\"outline\" width={['50%', '50%', '50%', '10%']}>\n          <Link to=\"/recipes/create\">Create Recipe</Link>\n        </Button>\n        <Flex width={['100%', '100%', '100%', '20%']}>\n          <Input placeholder=\"Search Recipes by Name\" size=\"sm\" onChange={(e) => setSearchName(e.target.value)} />\n          <IconButton\n            aria-label=\"Search Recipes\"\n            colorScheme=\"purple\"\n            variant=\"outline\"\n            size=\"sm\"\n            icon={<SearchIcon />}\n            onClick={() => {\n              history.push(`/recipes/search/${searchName}`)\n            }}\n          />\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n","import { Box, Avatar, Badge, Center, Button, IconButton, Flex } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\nimport { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { DeleteIcon, EditIcon } from '@chakra-ui/icons'\nimport { useHistory } from 'react-router'\n\ntype propsType = {\n  image?: string\n  title: string\n  subtitle?: string\n  category?: string\n  description?: string\n  buttonContent?: string\n  targetPath?: string\n  onDelete?: () => void\n}\nexport default function card({\n  image,\n  title,\n  subtitle,\n  category,\n  description,\n  buttonContent = 'Open',\n  targetPath = '/',\n  onDelete,\n}: propsType) {\n  const [hovered, setHovered] = useState(false)\n  const history = useHistory()\n\n  return (\n    <Box\n      width={['90%', '50%', '25%', '15%']}\n      borderWidth=\"3px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      className=\"relative\"\n    >\n      <Box className=\"relative\">\n        <Center mx=\"12\" my=\"2\">\n          <Avatar size={image ? 'full' : '2xl'} minH=\"100px\" minW=\"100px\" name={title} src={image} />\n          {hovered && (\n            <Center className=\"absolute w-full h-full bg-indigo-600 bg-opacity-25\">\n              <Box>\n                <motion.div className=\"h-0\" animate={{ marginBottom: '60px' }}>\n                  <Button colorScheme=\"purple\" variant=\"solid\" to={targetPath}>\n                    {buttonContent}\n                  </Button>\n                </motion.div>\n              </Box>\n            </Center>\n          )}\n          <Link to={targetPath} className=\"absolute inset-0\" />\n        </Center>\n      </Box>\n      <Center d=\"flex\" alignItems=\"baseline\">\n        <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n          {category}\n        </Badge>\n        <Box color=\"gray.500\" fontWeight=\"semibold\" letterSpacing=\"wide\" fontSize=\"xs\" textTransform=\"uppercase\" ml=\"2\">\n          {subtitle}\n        </Box>\n      </Center>\n      <Box mt=\"2\" p=\"2\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        <Flex justify=\"space-between\">\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" isTruncated>\n            {title}\n          </Box>\n          {onDelete && (\n            <Flex>\n              <motion.div animate={{ scale: [0.5, 1] }} transition={{ duration: 0.2, times: [0, 0.5, 1] }}>\n                <IconButton\n                  size=\"sm\"\n                  colorScheme=\"purple\"\n                  variant=\"ghost\"\n                  aria-label=\"Delete Recipe\"\n                  icon={<DeleteIcon />}\n                  onClick={onDelete}\n                />\n              </motion.div>\n              <motion.div animate={{ scale: [0.5, 1] }} transition={{ duration: 0.2, times: [0, 0.5, 1] }}>\n                <IconButton\n                  size=\"sm\"\n                  colorScheme=\"blue\"\n                  variant=\"ghost\"\n                  aria-label=\"Edit Recipe database\"\n                  icon={<EditIcon />}\n                  onClick={() => history.push(`/${targetPath}/edit`)}\n                />\n              </motion.div>\n            </Flex>\n          )}\n        </Flex>\n\n        <Box>{description}</Box>\n      </Box>\n    </Box>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const GET_RECIPES_QUERY = gql`\n  {\n    recipes {\n      _id\n      cookingTime\n      createdAt\n      name\n      numberOfServings\n    }\n  }\n`\n\nexport const GET_RECIPE_QUERY = gql`\n  query ($id: ObjectId!) {\n    recipe(query: { _id: $id }) {\n      _id\n      cookingTime\n      createdAt\n      name\n      numberOfServings\n      preparationSteps\n      ingredients {\n        product\n        quantity\n        unit\n      }\n    }\n  }\n`\n\nexport const CREATE_RECIPE_MUTATION = gql`\n  mutation ($data: RecipeInsertInput!) {\n    insertOneRecipe(data: $data) {\n      _id\n    }\n  }\n`\n\nexport const EDIT_RECIPE_MUTATION = gql`\n  mutation ($data: RecipeInsertInput!) {\n    replaceOneRecipe(data: $data) {\n      _id\n    }\n  }\n`\n\nexport const DELETE_RECIPE_MUTATION = gql`\n  mutation ($id: ObjectId!) {\n    deleteOneRecipe(query: { _id: $id }) {\n      _id\n    }\n  }\n`\n\nexport const SEARCH_RECIPE_QUERY = gql`\n  query ($name: String!) {\n    recipes(query: { name: $name }) {\n      _id\n      cookingTime\n      createdAt\n      name\n      numberOfServings\n      preparationSteps\n    }\n  }\n`\n","import Card from './ui/Card'\nimport { useMutation } from 'react-apollo'\nimport { DELETE_RECIPE_MUTATION } from '../utils/queries'\nimport { useHistory } from 'react-router'\nimport moment from 'moment'\n\ntype propTypes = {\n  _id: string\n  name: string\n  cookingTime: number\n  createdAt: Date\n}\n\nexport default function RecipePreview({ _id, name, cookingTime, createdAt }: propTypes) {\n  const history = useHistory()\n\n  const [deleteRecipe] = useMutation(DELETE_RECIPE_MUTATION)\n  async function onDelete() {\n    await deleteRecipe({ variables: { id: _id } })\n    history.push('/')\n  }\n\n  return (\n    <Card\n      title={name}\n      subtitle={`${createdAt ? moment(createdAt).fromNow() : ''}`}\n      description={`${cookingTime} minutes`}\n      category={name}\n      buttonContent=\"Let's cook it!\"\n      targetPath={`/recipes/${_id}`}\n      onDelete={onDelete}\n    ></Card>\n  )\n}\n","import { Wrap } from '@chakra-ui/react'\nimport RecipePreview from '../components/RecipePreview'\nimport Card from '../components/ui/Card'\nimport { useQuery } from 'react-apollo'\nimport { useParams } from 'react-router-dom'\n\nimport { GET_RECIPES_QUERY, SEARCH_RECIPE_QUERY } from '../utils/queries'\n\ntype propsType = {\n  searchMode?: boolean\n}\nexport default function Recipes({ searchMode = false }: propsType) {\n  const params: any = useParams()\n\n  const query = searchMode ? SEARCH_RECIPE_QUERY : GET_RECIPES_QUERY\n  const variables = searchMode ? { name: params.recipeName } : {}\n  const { data, error, loading } = useQuery(query, {\n    variables: variables,\n    fetchPolicy: 'network-only',\n  })\n  if (loading) return <div></div>\n  if (error) return <div>{error}</div>\n  return (\n    <Wrap p=\"5\" spacing=\"30px\" justify=\"center\" align=\"center\" overflow=\"hidden\">\n      <Card\n        title=\"+\"\n        subtitle=\"\"\n        description=\"Add new recipe\"\n        category=\"New Recipe\"\n        buttonContent=\"Add New Recipe!\"\n        targetPath=\"/recipes/create\"\n      ></Card>\n      {data &&\n        data.recipes &&\n        data.recipes.map((recipe, index) => <RecipePreview key={`recipe-${index}`} {...recipe} />)}\n    </Wrap>\n  )\n}\n","import { Box, Flex, Center, IconButton } from '@chakra-ui/react'\nimport { FieldArray, useField } from 'formik'\nimport { InputControl, TextareaControl } from 'formik-chakra-ui'\nimport { FormControlProps } from '@chakra-ui/react'\nimport { DeleteIcon, AddIcon } from '@chakra-ui/icons'\n\nimport { Recipes } from '../../utils/types'\ninterface BaseProps extends FormControlProps {\n  name: string\n  label?: string\n  helperText?: string\n}\ntype InputValueProps = string | Recipes.Ingredient\n\ntype InputControlProps = BaseProps & {\n  inputRows?: string[] | Recipes.Ingredient[]\n  defaultRow: InputValueProps\n}\n\ntype InputRowProps = Recipes.Ingredient & { id: number; name: string }\n\nfunction ObjectInputRow({ name, id, ...fields }: InputRowProps) {\n  return (\n    <Flex flex=\"1\">\n      {Object.entries(fields).map(([fieldName], index) => (\n        <InputControl key={`name.${index}.${fieldName}`} name={`${name}.${id}.${fieldName}`} />\n      ))}\n    </Flex>\n  )\n}\n\ntype inputHeadingPropsType = InputControlProps & { push: (a: InputValueProps) => void }\n\nfunction InputHeading(props: inputHeadingPropsType) {\n  const { label, inputRows, defaultRow, push } = props\n  const isString: Boolean = typeof inputRows[0] === 'string'\n\n  return (\n    <Flex>\n      <Center borderWidth=\"4px\" px=\"3\" align=\"center\">\n        -\n      </Center>\n      {isString ? (\n        <Center flex=\"1\" borderWidth=\"3px\" px=\"3\" align=\"center\">\n          {label}\n        </Center>\n      ) : inputRows.length > 0 ? (\n        Object.keys(inputRows[0]).map((fieldTitle, index) => (\n          <Center key={`title-${index}`} flex=\"1\" borderWidth=\"3px\" px=\"3\" align=\"center\">\n            {fieldTitle}\n          </Center>\n        ))\n      ) : (\n        <Center flex=\"1\" borderWidth=\"3px\" px=\"3\" align=\"center\">\n          {label}\n        </Center>\n      )}\n      <IconButton onClick={() => push(defaultRow)} aria-label=\"add row\" icon={<AddIcon />}>\n        Add Row\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default function ArrayInputcontrol(props: InputControlProps) {\n  const { name, inputRows } = props\n  const [, { error, touched }] = useField(name)\n  // if (inputRows.length === 0) {\n  //   return <div></div>\n  // }\n  return (\n    <Box>\n      <FieldArray name={name}>\n        {({ push, remove }) => (\n          <Box>\n            <InputHeading {...props} push={push}></InputHeading>\n            {inputRows.map((rowData: InputValueProps, index: number) => (\n              <Flex key={`input-row-${index}`}>\n                <Center borderWidth=\"3px\" px=\"3\" align=\"center\">\n                  {index + 1}\n                </Center>\n                {typeof rowData === 'string' ? (\n                  <TextareaControl name={`${name}.${index}`} label=\"\" />\n                ) : (\n                  <ObjectInputRow name={name} id={index} {...rowData} />\n                )}\n                <IconButton onClick={() => remove(index)} aria-label=\"delete row\" icon={<DeleteIcon />} />\n              </Flex>\n            ))}\n          </Box>\n        )}\n      </FieldArray>\n      {touched && error && typeof error === 'string' && (\n        <Box textAlign=\"left\" color=\"red\">\n          {error}\n        </Box>\n      )}\n    </Box>\n  )\n}\n","import { Flex, Box, Badge, FormLabel } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\n\ntype propTypes = {\n  children: ReactNode\n  left?: string\n  right?: string\n}\nexport default function InputControlGroup({ left, right, children }: propTypes) {\n  return (\n    <Box align=\"center\" m=\"5\">\n      <FormLabel>Cooking Time</FormLabel>\n      <Flex align=\"center\">\n        {left && (\n          <Badge colorScheme=\"purple\" fontSize=\"0.8em\" p=\"2\">\n            {left}\n          </Badge>\n        )}\n        {children}\n        {right && (\n          <Badge colorScheme=\"purple\" fontSize=\"0.8em\" p=\"2\">\n            {right}\n          </Badge>\n        )}\n      </Flex>\n    </Box>\n  )\n}\n","import { Box, Collapse, Button, useDisclosure, BoxProps } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\n\ninterface PropsType extends BoxProps {\n  title?: string\n  children: ReactNode\n}\nexport default function CollapseCard(props: PropsType) {\n  const { title = 'Open', children, ...rest } = props\n  const { isOpen, onToggle } = useDisclosure()\n\n  return (\n    <Box borderWidth=\"3px\" borderRadius=\"lg\" overflow=\"auto\" {...rest}>\n      <Button className=\"block\" w=\"100%\" onClick={onToggle}>\n        {title}\n      </Button>\n      <Collapse in={isOpen} animateOpacity>\n        <Box p=\"3\">{children}</Box>\n      </Collapse>\n    </Box>\n  )\n}\n","import * as React from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport { Flex, Box, Heading, HStack, Button } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport moment from 'moment'\n\nimport { Forms } from '../utils/types'\nimport { useMutation, useQuery } from 'react-apollo'\nimport { CREATE_RECIPE_MUTATION, GET_RECIPE_QUERY, EDIT_RECIPE_MUTATION } from '../utils/queries'\n\nimport { useHistory } from 'react-router'\n\nimport { InputControl, NumberInputControl, ResetButton } from 'formik-chakra-ui'\nimport ArrayInputControl from '../components/ui/ArrayInputControl'\nimport InputControlGroup from '../components/ui/InputControlGroup'\nimport CollapseCard from '../components/ui/CollapseCard'\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(),\n  preparationSteps: Yup.array().required().min(2).of(Yup.string().required()),\n  ingredients: Yup.array()\n    .required()\n    .min(2)\n    .of(\n      Yup.object().shape({\n        product: Yup.string().required(),\n        quantity: Yup.number().required(),\n        unit: Yup.string().required(),\n      })\n    ),\n  cookingTime: Yup.number().required().min(5),\n})\n\nconst initialIngredient = { product: '', quantity: 0, unit: 'kg' }\n\ntype propsType = {\n  editMode?: boolean\n}\n\nexport default function RecipeCreate({ editMode = false }: propsType) {\n  const [createRecipe] = useMutation(CREATE_RECIPE_MUTATION)\n  const [editRecipe] = useMutation(EDIT_RECIPE_MUTATION)\n  const params: any = useParams()\n\n  const history = useHistory()\n  let initialValues: Forms.CreateRecipe = {\n    name: '',\n    cookingTime: 10,\n    preparationSteps: ['nadia'],\n    ingredients: [initialIngredient],\n  }\n  if (editMode) {\n    const { data, error, loading } = useQuery(GET_RECIPE_QUERY, {\n      variables: { id: params.recipeId },\n    })\n\n    if (loading) return <Box></Box>\n    if (error) return <Box>{error}</Box>\n    delete data.recipe.__typename\n    data.recipe.ingredients.forEach((ingredient) => {\n      delete ingredient.__typename\n    })\n    initialValues = data.recipe\n  }\n\n  async function handleSubmit(values, actions) {\n    console.log({ values, actions })\n    actions.setSubmitting(false)\n\n    if (editMode) {\n      let editedRecipe = Object.assign(values, { _id: params.recipeId })\n      await editRecipe({ variables: { data: editedRecipe } })\n      history.push(`/recipes/${params.recipeId}`)\n    } else {\n      values['createdAt'] = moment().toISOString()\n      await createRecipe({ variables: { data: values } })\n      history.push('/')\n    }\n  }\n\n  return (\n    <Box align=\"center\" justify=\"center\">\n      <Box width={['100%', '100%', '100%', '50%']} align=\"center\" justify=\"center\" borderWidth=\"3px\" borderRadius=\"lg\">\n        <Heading bg=\"purple.300\" color=\"white\">\n          Add New Recipe\n        </Heading>\n        <Box p=\"1\">\n          <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n            {({ values }) => (\n              <Form>\n                <Flex>\n                  <InputControl name=\"name\" label=\"Name\" m=\"5\" />\n                  <InputControlGroup right=\"Min\">\n                    <NumberInputControl name=\"cookingTime\" label=\"\"></NumberInputControl>\n                  </InputControlGroup>\n                </Flex>\n                <CollapseCard title=\"Preparation Steps\">\n                  <ArrayInputControl\n                    name=\"preparationSteps\"\n                    label=\"Preparation Steps\"\n                    inputRows={values.preparationSteps}\n                    defaultRow={''}\n                  />\n                </CollapseCard>\n                <CollapseCard title=\"Ingredients\" my=\"5\">\n                  <ArrayInputControl\n                    name=\"ingredients\"\n                    label=\"ingredients\"\n                    inputRows={values.ingredients}\n                    defaultRow={initialIngredient}\n                  />\n                </CollapseCard>\n                <HStack spacing=\"10px\">\n                  <Button type=\"submit\" flex=\"1\" colorScheme=\"purple\" bg=\"purple.900\">\n                    Submit\n                  </Button>\n                  <ResetButton flex=\"1\" colorScheme=\"purple\">\n                    Reset\n                  </ResetButton>\n                </HStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/DefaultImage.0d959e90.jpg\";","import { Recipes } from '../../utils/types'\nimport { Flex, ListItem, UnorderedList, Text, Badge, Heading, Box } from '@chakra-ui/react'\n\nexport default function Ingredients({ ingredients }: { ingredients: Recipes.Ingredient[] }) {\n  return (\n    <Flex justify=\"space-between\">\n      <Heading size=\"lg\">Ingredients</Heading>\n      <Box bg=\"purple.50\" w=\"50%\" borderWidth=\"3px\" borderRadius=\"lg\" p=\"5\">\n        <UnorderedList>\n          {ingredients.map((ingredient, index) => (\n            <ListItem key={`ingredient-${index}`}>\n              <Text ml=\"1\" as=\"b\">\n                {ingredient.product}\n                <Badge px=\"3\" ml=\"3\" variant=\"outline\" colorScheme=\"purple\" color=\"purple.900\">\n                  {ingredient.quantity}\n                  <Text ml=\"1\" as=\"b\">\n                    {ingredient.unit}\n                  </Text>\n                </Badge>\n              </Text>\n            </ListItem>\n          ))}\n        </UnorderedList>\n      </Box>\n    </Flex>\n  )\n}\n","import { Box, Heading, Center, Text, Badge } from '@chakra-ui/react'\n\nexport default function PreparationSteps({ preparationSteps }: { preparationSteps: string[] }) {\n  return (\n    <Box my=\"10\">\n      <Heading size=\"lg\" mb=\"2\">\n        Prepation Steps\n      </Heading>\n      {preparationSteps.map((preparationStep, index) => (\n        <Box borderWidth=\"3px\" borderRadius=\"lg\" key={`ingredient-${index}`}>\n          <Center>\n            <Badge px=\"5\" variant=\"outline\" colorScheme=\"purple\" color=\"purple.900\">\n              Step {index + 1}\n            </Badge>\n          </Center>\n          <Text p=\"5\">{preparationStep}</Text>\n        </Box>\n      ))}\n    </Box>\n  )\n}\n","import { Box, Image, Heading, Flex, Center, Text } from '@chakra-ui/react'\nimport { useParams } from 'react-router-dom'\nimport { Recipes } from '../../utils/types'\n\nimport { TimeIcon } from '@chakra-ui/icons'\nimport DefaultImage from '../../assets/images/DefaultImage.jpg'\nimport { useQuery } from 'react-apollo'\n\nimport { GET_RECIPE_QUERY } from '../../utils/queries'\n\nimport Ingredients from './Ingredients'\nimport PreparationSteps from './PreparationSteps'\nimport moment from 'moment'\n\nexport default function Recipe() {\n  const params: any = useParams()\n  const { data, error, loading } = useQuery(GET_RECIPE_QUERY, {\n    variables: { id: params.recipeId },\n    fetchPolicy: 'cache-and-network',\n  })\n  if (loading) return <Box></Box>\n  if (error) return <Box>{error}</Box>\n  const { name, numberOfServings, ingredients, preparationSteps, cookingTime, createdAt }: Recipes.Recipe = data.recipe\n\n  return (\n    <Box align=\"center\">\n      <Box\n        width={['100%', '100%', '100%', '50%']}\n        height=\"50%\"\n        align=\"center\"\n        borderWidth=\"3px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Heading size=\"md\" bg=\"purple.900\" color=\"purple.200\">\n          <Center>\n            <Text as=\"cite\">\n              Served {numberOfServings} Times ({createdAt ? `Created at ${moment(createdAt).fromNow()}` : ''})\n            </Text>\n          </Center>\n        </Heading>\n        <Image h=\"50vh\" objectFit=\"cover\" src={DefaultImage} alt=\"Dan Abramov\" />\n        <Heading size=\"2xl\" bg=\"purple.200\" color=\"purple.900\">\n          {name}\n        </Heading>\n        <Heading size=\"md\" bg=\"purple.900\" color=\"purple.200\">\n          <Flex align=\"center\" justify=\"center\">\n            <TimeIcon mr=\"2\" />\n            {cookingTime} Min\n          </Flex>\n        </Heading>\n        <Box align=\"left\" p=\"5\" pb=\"0\">\n          <Ingredients ingredients={ingredients}></Ingredients>\n          <PreparationSteps preparationSteps={preparationSteps} />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport NotFound from './pages/NotFound'\nimport Header from './components/Header'\nimport Recipes from './pages/Recipes'\nimport RecipeCreate from './pages/RecipeCreate'\nimport Recipe from './components/Recipe/Recipe'\n\nimport { ChakraProvider } from '@chakra-ui/react'\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <ChakraProvider>\n        <Header />\n        <Switch>\n          <Route path=\"/recipes/create\">\n            <RecipeCreate />\n          </Route>\n          <Route path=\"/recipes/search/:recipeName\">\n            <Recipes searchMode={true} />\n          </Route>\n          <Route path=\"/recipes/:recipeId/edit\">\n            <RecipeCreate editMode={true} />\n          </Route>\n          <Route path=\"/recipes/:recipeId\">\n            <Recipe />\n          </Route>\n\n          <Route path=\"/recipes\">\n            <Recipes />\n          </Route>\n          <Redirect from=\"/\" to=\"/recipes\" />\n          <Route component={NotFound} />\n        </Switch>\n      </ChakraProvider>\n    </BrowserRouter>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { ApolloLink } from 'apollo-link'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst SERVER_BASE_URL = 'https://eu-west-1.aws.realm.mongodb.com/api/client/v2.0/app/recipes-slphl/graphql'\n\nconst getAuthorizationHeader = async () => {\n  const res = await fetch(\n    'https://eu-west-1.aws.realm.mongodb.com/api/client/v2.0/app/recipes-slphl/auth/providers/api-key/login',\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        key: 'ypy6OoZTy30O7H08D8Ip5tQM6gQXJ0IrZ6PJrLjxhb9CGuSKFRtSQuCE6Z1FmsOW',\n      }),\n    }\n  )\n\n  if (res.ok) {\n    const json = await res.json()\n    const accessToken = json.access_token\n    return `Bearer ${accessToken}`\n  }\n\n  return ''\n}\n\nconst withToken = setContext(async () => {\n  const token = await getAuthorizationHeader()\n  return { token }\n})\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  const { token } = operation.getContext()\n  operation.setContext(() => ({\n    headers: {\n      Authorization: token,\n    },\n  }))\n  return forward(operation)\n})\n\nconst httpLink = new HttpLink({\n  uri: SERVER_BASE_URL,\n})\n\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([withToken, authMiddleware.concat(httpLink)]),\n  cache,\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}